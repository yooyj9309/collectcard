name: CI

on:
  - push

jobs:
  tests:
    name: Lint and Test
    #    runs-on: [self-hosted, jvm]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 5
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          submodules: true

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Setup Gradle Dependencies Cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts') }}

      - name: Setup Gradle Wrapper Cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}

      - name: Test
        env:
          GH_USERNAME: ${{ secrets.GH_USERNAME }}
          GH_DAAS_PACKAGES_TOKEN: ${{ secrets.GH_DAAS_PACKAGES_TOKEN }}
          DEVELOPMENT_SHINHANCARD_CLIENT_ID: ${{ secrets.DEVELOPMENT_SHINHANCARD_CLIENT_ID }}
          DEVELOPMENT_AWS_IAM_COLLECTCARD_ACCESS_KEY: ${{ secrets.DEVELOPMENT_AWS_IAM_COLLECTCARD_ACCESS_KEY }}
          DEVELOPMENT_AWS_IAM_COLLECTCARD_ACCESS_TOKEN: ${{ secrets.DEVELOPMENT_AWS_IAM_COLLECTCARD_ACCESS_TOKEN }}
          STAGING_AWS_IAM_COLLECTCARD_ACCESS_KEY: ${{ secrets.STAGING_AWS_IAM_COLLECTCARD_ACCESS_KEY }}
          STAGING_AWS_IAM_COLLECTCARD_ACCESS_TOKEN: ${{ secrets.STAGING_AWS_IAM_COLLECTCARD_ACCESS_TOKEN }}
        run: ./gradlew -s test

  build:
    name: Build and Push
    #    runs-on: [self-hosted, jvm]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 5
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          submodules: true

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Setup Gradle Dependencies Cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts') }}

      - name: Setup Gradle Wrapper Cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}

      - name: Build collectcard
        env:
          GH_USERNAME: ${{ secrets.GH_USERNAME }}
          GH_DAAS_PACKAGES_TOKEN: ${{ secrets.GH_DAAS_PACKAGES_TOKEN }}
        run: |
          ./gradlew clean build -x test

      - name: Build docker image and Push
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: rainist/collectcard
          tags: ${{ github.sha }}

  build-grpc-gateway:
    name: Build gRPC-gateway
    #    runs-on: [self-hosted, default]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 5
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          submodules: true

      - name: Build and Push collectcard-grpc-gateway
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: rainist/collectcard-grpc-gateway
          path: grpc-gateway
          tags: ${{ github.sha }}
          build_args: GH_ACCESS_TOKEN=${{ secrets.GH_ACCESS_TOKEN }}


#   deploy-dev:
#     name: Trigger deployment event when develop branch is merged
#     runs-on: ubuntu-20.04
#     needs: [tests, build]
#     steps:
#       - name: Create deployment
#         if: github.ref == 'refs/heads/master'
#         run: |
#           curl --silent --show-error --fail \
#             -X POST "https://api.github.com/repos/$GITHUB_REPOSITORY/deployments" \
#             -H "Authorization: token ${{ secrets.GH_ACCESS_TOKEN }}" \
#             -H "Content-Type: text/json; charset=utf-8" \
#             -H "Accept: application/vnd.github.flash-preview+json" \
#             -d @- <<EOF
#           {
#               "ref": "master",
#               "environment": "staging",
#               "required_contexts": [],
#               "auto_merge": false
#           }
#           EOF
