name: CI

on:
  - push

jobs:
  tests:
    name: Lint and Test
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          fetch-depth: 5
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          submodules: true

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}

      - name: Lint, Test, Coverage
        env:
          GH_USERNAME: ${{ secrets.GH_USERNAME }}
          GH_DAAS_PACKAGES_TOKEN: ${{ secrets.GH_DAAS_PACKAGES_TOKEN }}
          DEVELOPMENT_SHINHANCARD_CLIENT_ID: ${{ secrets.DEVELOPMENT_SHINHANCARD_CLIENT_ID }}
        run: ./gradlew -s lintKotlin check jacocoTestReport

      - name: Send to codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  build:
    name: Build and Push
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          fetch-depth: 5
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          submodules: true

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}

      - name: Build collectcard
        env:
          GH_USERNAME: ${{ secrets.GH_USERNAME }}
          GH_DAAS_PACKAGES_TOKEN: ${{ secrets.GH_DAAS_PACKAGES_TOKEN }}
          DEVELOPMENT_COLLECTCARD_DB_PASSWORD: ${{ secrets.DEVELOPMENT_COLLECTCARD_DB_PASSWORD }}
          DEVELOPMENT_MYDATA_DB_PASSWORD: ${{ secrets.DEVELOPMENT_COLLECTCARD_DB_PASSWORD }}
          DEVELOPMENT_SHINHANCARD_CLIENT_ID: ${{ secrets.DEVELOPMENT_SHINHANCARD_CLIENT_ID }}
        run: |
          ./gradlew clean build -x test
          docker build -t rainist/collectcard:$GITHUB_SHA .

      - name: Build collectcard-grpc-gateway
        working-directory: ./grpc-gateway
        run: docker build --build-arg GH_ACCESS_TOKEN=${{ secrets.GH_ACCESS_TOKEN }} -t rainist/collectcard-grpc-gateway:$GITHUB_SHA .

      - name: Login docker
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin

      - name: Push images
        run: |
          docker push rainist/collectcard:$GITHUB_SHA
          docker push rainist/collectcard-grpc-gateway:$GITHUB_SHA

  deploy-dev:
    name: Trigger deployment event when develop branch is merged
    runs-on: ubuntu-20.04
    needs: [tests, build]
    steps:
      - name: Create deployment
        if: github.ref == 'refs/heads/master'
        run: |
          curl --silent --show-error --fail \
            -X POST "https://api.github.com/repos/$GITHUB_REPOSITORY/deployments" \
            -H "Authorization: token ${{ secrets.GH_ACCESS_TOKEN }}" \
            -H "Content-Type: text/json; charset=utf-8" \
            -H "Accept: application/vnd.github.flash-preview+json" \
            -d @- <<EOF
          {
              "ref": "master",
              "environment": "development",
              "required_contexts": [],
              "auto_merge": false
          }
          EOF
