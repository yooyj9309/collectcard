let resultCodes = {
    "": "UNKNOWN",
    "0004": "OK",
    "0010": "OK",
    "0013": "OK",
    "400": "INVALID_ACCESS_TOKEN",
    "503": "EXTERNAL_SERVER_ERROR",
    "9971": "EXTERNAL_SERVER_ERROR",
    "9999": "EXTERNAL_SERVER_ERROR",
}

let CardType = {
    "1" : "DEBIT",
    "2" : "CREDIT",
    "3" : "MICROPAYMENT",
    "99" : "CARD_TYPE_UNKNOWN"
}

{
    "resultCodes": [get-key($resultCodes, .dataHeader.resultCode, "UNKNOWN")],
    "dataHeader": {
        "resultCode": get-key($resultCodes, .dataHeader.resultCode, "UNKNOWN"), // 결과코드
        "resultMessage": .dataHeader.resultMessage,     // 결과 메세지
        "successCode": .dataHeader.successCode          // 성공 코드
    },
    "dataBody": {
        "transactions": [for (.dataBody.grp001)
            {
                "approvalDay" : if(size(.apvDt) >= 14) .apvDt[ 0 : 8 ] else "",   // 승인일자 yyyyMMdd
                "approvalTime" : if(size(.apvDt) >= 14) .apvDt[ 8 : 14 ] else "", // 승인시간 HHmmss
                "cardCompanyCardId" : "",
                "approvalNumber": .apvN,                                          // 승인번호
                "amount": replace(.apva, ",", ""),                                // 승인금액
                "cardNumber": .crdN,                                              // 카드번호
                "cardNumberMask" : .crdN,                                         // 카드넘버마스크
                "storeName" : .mctNm,                                             // 가맹점명
                "paymentDay": .stDuD,                                             // 결제예정일자
                "currencyCode": .loaTel,                                          // 통화코드
                "storeCategory" : .ryCd,                                          // 업종코드명
                "transactionCountry" : .ntn,                                      // 사용국가
                //"cardType" : get-key($CardType, .ccd, "CARD_TYPE_UNKNOWN"),     // 거래구분 TODO 예상국 이게 여기서 왜 필요한지 내부 처리 로직 확인 ccd? cusccd?
                "cardType" : "DEBIT",
                "installment": 0,                                                 // not null field default 0
                "cardTransactionType" : if(number(replace(.apva, ",", "")) > 0) "APPROVAL" else "APPROVAL_CANCEL",
                "canceledAmount" : if(number(replace(.apva, ",", "")) > 0) "0" else string(-1 * number(replace(.apva, ",", ""))),
                "isOverseaUse": true                                              // 해외 내역이므로 항상 true
            }
        ],
        "nextKey" : .dataBody.nxtQyKey  // 다음 조회 키
        //"isBC" : .dataBody.bccF TODO 현재 response에서 사용하지 않으며, 다른 카드와 공통성을 고려할때, 해당부분을 response에 추가하는것은 논의 필요. ( extrainfo같은 값으로 넣는다던가..)
    }
}
