//카드_[EXT] 결제예정금액(일시불,현금서비스 상세) SHC_HPG00237

let resultCodes = {
    "": "UNKNOWN",
    "0004": "OK",
    "0010": "OK",
    "400": "INVALID_ACCESS_TOKEN",
    "503": "EXTERNAL_SERVER_ERROR",
    "0002": "EXTERNAL_SERVER_ERROR",
    "0013": "OK",
    "0999": "EXTERNAL_SERVER_ERROR",
    "9971": "EXTERNAL_SERVER_ERROR",
    "9999": "EXTERNAL_SERVER_ERROR"
}

{
    "resultCodes": [get-key($resultCodes, .dataHeader.resultCode, "UNKNOWN")],
    "dataHeader": {
        "resultCode": get-key($resultCodes, .dataHeader.resultCode, "UNKNOWN"), // 결과코드
        "resultMessage": .dataHeader.resultMessage,
        "successCode": .dataHeader.successCode
    },
    "dataBody": {
        "billTransactions": [for (.dataBody.grp001)
            if(.date != "")(
                {
                    "approvalDay" : .date,                  // 이용일자
                    "amount": .prnBll,                      // 이용원금금액
                    "storeName": .mchtNm,                   // 가맹점명
                    "cardNumber": replace(.crdN, "-", ""),  // 마스킹 카드번호
                    "cardNumberMasked": .crdN,              // 마스킹 카드번호
                    "billedAmount": .prnBll,                // 청구금액
                    "billedFee": .feeBll,                   // 수수료금액
                    "isPaidFull": if (.fullPaymentFlag == "A") true else false, // 완납여부
                    "isInstallmentPayment" : false,         // 할부여부
                    "cardName": .crdPdNm,                   // 카드상품명
                    "pointsRate": .pointRate                // 적립예정포인트율
                }
            )
        ],
        "nextKey" : .dataBody.nxtQyKey
    }
}
