let CardOwnerType = {
    "1": "SELF",
    "3": "FAMILY"
}

let CardType = {
    "1": "CREDIT",
    "2": "CREDIT",
    "3": "CREDIT",
    "4": "CREDIT",
    "5": "DEBIT",
    "99": "UNKNOWN"
}

let brands = {
    "": "CARD_INTERNATIONAL_BRAND_UNKNOWN",
    "0": "CARD_INTERNATIONAL_BRAND_NOT_EXISTS",
    "1": "CARD_INTERNATIONAL_BRAND_MASTERCARD",
    "2": "CARD_INTERNATIONAL_BRAND_VISA",
    "3": "CARD_INTERNATIONAL_BRAND_JCB",
    "4": "CARD_INTERNATIONAL_BRAND_AMEX",
    "5": "CARD_INTERNATIONAL_BRAND_UNIONPAY",

    "6": "CARD_INTERNATIONAL_BRAND_UNKNOWN",
    "7": "CARD_INTERNATIONAL_BRAND_BCGLOBAL",

    "8": "CARD_INTERNATIONAL_BRAND_UNKNOWN",

    "9": "CARD_INTERNATIONAL_BRAND_UNKNOWN",
    "Z": "CARD_INTERNATIONAL_BRAND_UNKNOWN"
}

let resultCodes = {
    "": "UNKNOWN",
    "0004": "OK",
    "0010": "OK",
    "0013": "OK",
    "9800": "INVALID_USER",
    "400": "INVALID_ACCESS_TOKEN",
    "503": "EXTERNAL_SERVER_ERROR",
    "0002": "EXTERNAL_SERVER_ERROR",
    "9971": "EXTERNAL_SERVER_ERROR",
    "9999": "EXTERNAL_SERVER_ERROR"
}

let cardholder_name = .dataBody.clnHgNm

{
    "resultCodes": [get-key($resultCodes, .dataHeader.resultCode, "UNKNOWN")],
    "dataHeader": {
        "resultCode": get-key($resultCodes, .dataHeader.resultCode, "UNKNOWN"),
        "resultMessage": .dataHeader.resultMessage
    },
    "dataBody": {
        "cards": [for (.dataBody.grp001)
            {
                "cardCompanyCardId": replace(.cardno, "-", ""),
                "cardOwnerName": $cardholder_name,
                "cardOwnerType": get-key($CardOwnerType, .cardgubun, "SELF"),
                "cardOwnerTypeOrigin": .cardgubun,
                "cardName": .cardname,
                "cardNumberMask": .cardno,
                "cardNumber": .cardno,
                "cardType": get-key($CardType, .cardgubun, "UNKNOWN"),
                "cardTypeOrigin": .cardgubun,
                "internationalBrandName": get-key($brands, .cardbrand, "CARD_INTERNATIONAL_BRAND_UNKNOWN"),
                "isTrafficSupported" : if( .trafficyn == "Y") true else false
            }
        ],
        "nextKey" : .dataBody.nxtQyKey
    }
}
